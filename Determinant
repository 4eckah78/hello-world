#include <iostream>
#include <vector>
#include <math.h>

using namespace std;

long long determ(long long ** arr, int size) {
  int i = 0, j = 0;
  long long det = 0;
  long long ** minor;
  if (size == 1) {
    det = arr[0][0];
  }
  else if (size == 2) {
    det = arr[0][0] * arr[1][1] - arr[0][1] * arr[1][0];
  }
  else {
    minor = new long long*[size - 1];
    for (i = 0; i < size; ++i) {
      for (j = 0; j < size - 1; ++j) {
        if (j < i) 
          minor[j] = arr[j];
        else 
          minor[j] = arr[j + 1];
      }
      det += pow(-1, (i + j))*determ(minor, size - 1)*arr[i][size - 1];
    }
    delete[] minor;
  }
  return det;
}

long long determinant(vector< vector<long long> > m) {
  long long** matr = new long long*[m.size()];
  for (int i = 0; i < m.size(); ++i)
    matr[i] = new long long[m.size()];

  for (int i = 0; i < m.size(); ++i)
    for (int j = 0; j < m.size(); ++j)
      matr[i][j] = m[i][j];

  long long d = determ(matr, m.size());
  for (int i = 0; i < m.size(); ++i)
    delete[] matr[i];
  delete[] matr;
  return d;
}
